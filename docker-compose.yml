---
version: "3.4"
services:
###############################################################
# Dashy
###############################################################

  dashy:
    image: lissy93/dashy
    container_name: dashy
    volumes:
      - /container_data/dashy/dashy-conf.yml:/app/user-data/conf.yml
    ports:
      - 8090:8080
    networks:
      - reverse_proxy    
    environment:
      - NODE_ENV=production
    restart: always
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashy.tls=true"
      - "traefik.http.routers.dashy.entrypoints=websecure"
      - "traefik.http.routers.dashy.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.dashy.rule=Host(`home.willg.link`)"



###############################################################
# Media Stack
###############################################################

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=NZ
    volumes:
      - sabnzbdconfig:/config
      - downloads:/downloads 
    ports:
      - 8079:8079
    networks:
      - reverse_proxy
    restart: always

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=NZ 
    volumes:
      - sonarrconfig:/config 
      - tv:/TV 
      - downloads:/downloads 
    ports:
      - 8989:8989
    networks:
      - reverse_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.willg.link`)"
      - "traefik.http.routers.sonarr.service=sonarr-docker"
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=NZ 
    volumes:
      - radarrconfig:/config 
      - movies:/Movies 
      - downloads:/downloads 
    ports:
      - 7878:7878
    networks:
      - reverse_proxy

  plex:
    container_name: plex
    image: plexinc/pms-docker:latest
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=NZ 
    volumes:
      - plexconfig:/config 
      - plexconfig:/transcode 
      - tv:/tv 
      - movies:/movies 
    ports:
      -  32400:32400 
      -  5353:5353/udp 
      -  8324:8324 
      -  32410:32410/udp 
      -  32412:32412/udp 
      -  32413:32413/udp 
      -  32414:32414/udp 
      -  32469:32469
    networks:
      - reverse_proxy

###############################################################
# Portainer
###############################################################
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9443:9443"
      - "9000:9000"
    networks:
      - reverse_proxy    
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.portainer.rule=Host(`portainer.willg.link`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

###############################################################
# Traefik
###############################################################

  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --api
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAINNAME}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAINNAME}
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false 
      - --certificatesresolvers.letsencryptresolver.acme.dnschallenge=true
      - --certificatesresolvers.letsencryptresolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencryptresolver.acme.email=${EMAIL}
      - --certificatesresolvers.letsencryptresolver.acme.storage=/acme.json
      - --log.level=info
      - --providers.file.filename=/dynamic.yml
    ports:
      - 80:80
      - 443:443
    networks:
      - reverse_proxy
    environment:
      - CF_API_EMAIL=${EMAIL}
      - CF_API_KEY=${KEY}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro 
      - ${TRAEFIK_DIR}/acme.json:/acme.json 
      - /container_data/traefik/dynamic.yml:/dynamic.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin.basicauth.users=${HTTP_BASIC_USER}:${HTTP_BASIC_PWD}
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`${DOMAINNAME}`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=letsencryptresolver

###############################################################
# CodeProject AI
###############################################################
  codeprojectai:
    image: codeproject/ai-server:latest
    container_name: codeproject-ai
    restart: unless-stopped
    ports:
      - "32168:32168"   
      - "5000:5000"     
    networks:
      - reverse_proxy
    volumes:
      - codeproject_data:/app
      - codeproject_data:/app/Data
    environment:
      - TZ=Pacific/Auckland
    devices:
      - "/dev/bus/usb/010/003:/dev/bus/usb/010/003"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.codeproject.rule=Host(`codeproject.willg.link`)"
      - "traefik.http.routers.codeproject.entrypoints=websecure"
      - "traefik.http.routers.codeproject.tls=true"
      - "traefik.http.routers.codeproject.tls.certresolver=letsencryptresolver"

###############################################################
# MCP Memory
###############################################################
  mcpmemory:
    image: mcpmemory_mcp-memory-server
    container_name: MCPMemory
    restart: always
    volumes:
      - mcpmemory_data:/app/data
    networks:
      - reverse_proxy
    ports:
      - '50880:50880'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp.rule=Host(`mcp.willg.link`)"
      - "traefik.http.routers.mcp.entrypoints=websecure"
      - "traefik.http.routers.mcp.tls=true"
      - "traefik.http.routers.mcp.tls.certresolver=letsencryptresolver"

###############################################################
# Maintainaar
###############################################################
  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:latest 
    container_name: maintainerr
    user: 1000:1000
    volumes:
      - maintainaar_config:/opt/data
    environment:
      - TZ=NZ
    networks:
      - reverse_proxy
    ports:
        - 6246:6246
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintainaar.rule=Host(`maintainaar.willg.link`)"
      - "traefik.http.routers.maintainaar.entrypoints=websecure"
      - "traefik.http.routers.maintainaar.tls=true"
      - "traefik.http.routers.maintainaar.tls.certresolver=letsencryptresolver"

###############################################################
# Volumes
#################################################################

volumes:
  maintainaar_config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/maintainaar'

  codeproject_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/codeprojectai'

  mcpmemory_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/mcpmemory'

  docker_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data'

  downloads:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/media/Downloads'

  tv:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/media/TV'

  movies:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/media/Movies'
  
  plexconfig:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/media/plex'

  sonarrconfig:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/media/sonarr'

  radarrconfig:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/media/radarr'

  sabnzbdconfig:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/media/sabnzbd'

  portainer_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/container_data/portainer'

###############################################################
# Networks
###############################################################
networks:
  reverse_proxy:
    external: true